---
- name: Install tomcat8 and deploy artifact
  hosts: appsrvgrp
  vars:
    timestamp: "{{ ansible_date_time.date }}_{{ ansible_date_time.hour }}_{{ ansible_date_time.minute }}"
    tom_url: https://dlcdn.apache.org/tomcat/tomcat-8/v8.5.83/bin/apache-tomcat-8.5.83-fulldocs.tar.gz
  tasks:
    - name: Install JDk on ubuntu 22
      ansible.builtin.apt:
        name: openjdk-8-jdk
        state: present
        update_cache: true
    
    - name: Download tomcat tar
      ansible.builtin.get_url:
        url: "{{ tom_url }}"
        dest: /tmp/tomcat-8.tar.gz

    - name: add tomcat group
      ansible.builtin.group:
        name: tomcat
        state: present

    - name: add tomcat user
      ansible.builtin.user:
        name: tomcat
        group: tomcat
        shell: /bin/nologin
        home: /usr/local/tomcat8

    - name: Create a directory tomcat8
      ansible.builtin.file:
        path: /tmp/tomcat8
        state: directory
        
    - name: Extract tomcat8
      ansible.builtin.unarchive:
        src: /tmp/tomcat-8.tar.gz
        dest: /tmp/tomcat8/
        remote_src: yes
        list_files: yes
      register: unarchive_info

    - ansible.builtin.debug:
        msg: "{{unarchive_info.files[0].split('/')[0]}}"

    - name: Synchronize /tmp/tomcat8/tomcat_cont /usr/local/tomcat8.
      ansible.builtin.synchronize:
        src: "/tmp/tomcat8/{{unarchive_info.files[0].split('/')[0]}}/"
        dest: /usr/local/tomcat8/
      delegate_to: "{{ inventory_hostname }}"
    
    - name: Change ownership of /usr/local/tomcat8
      ansible.builtin.file:
        path: /usr/local/tomcat8
        owner: tomcat
        group: tomcat
        recurse: yes
    
    - name: Setup tomcat SVC file on ubuntu 16 and 18
      ansible.builtin.template:
        src: templates/tomcat8-ubuntu-svcfile.j2
        dest: /etc/systemd/system/tomcat8.service
        mode: "a+x"

    - name: just force systemd to reread configs (2.4 and above)
      ansible.builtin.systemd:
        daemon_reload: yes
    
    - name: Start and Enable tomcat service
      ansible.builtin.service:
        name: tomcat8
        state: started
        enabled: true
      tags:
        - svc

    - name: Collect information about the existing atrifact if it exists
      ansible.builtin.stat: 
        path: /usr/local/tomcat8/webapps/ROOT
      register: artifact_stat
      tags:
        - deploy
    
    - name: Stop tomcat8 service
      ansible.builtin.service:
        name: tomcat8
        state: stopped
      tags:
        - deploy
    
    - name: Try backup and deploy
      block:
        - name: Archive ROOT directory with timestamp
          ansible.builtin.archive:
            path: /usr/local/tomcat8/webapps/ROOT
            dest: "/opt/ROOT_{{ timestamp }}.tgz"
          when: artifact_stat.stat.exists
          register: archive_info
          tags:
            - deploy

        - name: copy ROOT dir with old_ROOT name
          ansible.builtin.shell: cp -r ROOT old_ROOT
          args:
            chdir: /usr/local/tomcat8/webapps/

        - name: Delete current artifact
          ansible.builtin.file:
            path: "{{ item }}"
            state: absent
          when: archive_info.changed
          loop:
            - /usr/local/tomcat8/webapps/ROOT
            - /usr/local/tomcat8/webapps/ROOT.war
          tags:
            - deploy

        - name: Deploy artifact else restore old artifact
          block:
            - name: Deploy vprofile artifact
              ansible.builtin.copy:
                src: files/ROOT.war
                dest: /usr/local/tomcat8/webapps/ROOT.war
              register: deply_info
              tags:
                - deploy
          rescue:
            - name: else deploy old ROOT if artifact deployment failed
              ansible.builtin.shell: cp -r old_ROOT ROOT
              args:
                chdir: /usr/local/tomcat8/webapps/
      
      rescue:
        - name: start tomcat service
          ansible.builtin.service:
            name: tomcat8
            state: started
    
    - name: Start tomcat8 service
      ansible.builtin.service:
        name: tomcat8
        state: started
      when: deply_info.changed
      tags:
        - deploy

    - name: Wait until ROOT.war is extracted to ROOT directory
      ansible.builtin.wait_for:
        path: /usr/local/tomcat8/webapps/ROOT
      tags:
        - deploy

    - name: Deploy web configuration file
      ansible.builtin.template:
        src: templates/application.j2
        dest: /usr/local/tomcat8/webapps/ROOT/WEB-INF/classes/application.properties
        force: yes
      notify:
        - Restart Tomcat
      tags:
        - deploy

  handlers:
    - name: Restart Tomcat
      ansible.builtin.service:
        name: tomcat8
        state: restarted